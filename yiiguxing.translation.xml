<application>
  <component name="AppStorage">
    <histories>
      <item value="Compressor" />
      <item value="动物" />
      <item value="/** * Creates a {@link BloomFilter BloomFilter&lt;T&gt;} with the expected number of * insertions and expected false positive probability. * * &lt;p&gt;Note that overflowing a {@code BloomFilter} with significantly more elements * than specified, will result in its saturation, and a sharp deterioration of its * false positive probability. * * &lt;p&gt;The constructed {@code BloomFilter&lt;T&gt;} will be serializable if the provided * {@code Funnel&lt;T&gt;} is. * * &lt;p&gt;It is recommended that the funnel be implemented as a Java enum. This has the * benefit of ensuring proper serialization and deserialization, which is important * since {@link #equals} also relies on object identity of funnels. * * @param funnel the funnel of T's that the constructed {@code BloomFilter&lt;T&gt;} will use * @param expectedInsertions the number of expected insertions to the constructed * {@code BloomFilter&lt;T&gt;}; must be positive * @param fpp the desired false positive probability (must be positive and less than 1.0) * @return a {@code BloomFilter} */" />
      <item value="临时" />
      <item value="Anchor" />
      <item value="coordinate in EMU within the first cell." />
      <item value="the column (0 based) of the second cell." />
      <item value="the row (0 based) of the first cell." />
      <item value="the column (0 based) of the first cell." />
      <item value="Extended" />
      <item value="spec" />
      <item value="/** * Creates a picture. * @param anchor the client anchor describes how this picture is * attached to the sheet. * @param pictureIndex the index of the picture in the workbook collection * of pictures. * * @return the newly created picture." />
      <item value="wrapper" />
      <item value="注解" />
      <item value="The horizontal alignment is centered across multiple cells. * The information about how many cells to span is expressed in the Sheet Part, * in the row of the cell in question. For each cell that is spanned in the alignment, * a cell element needs to be written out, with the same style Id which references the centerContinuous alignment." />
      <item value="The horizontal alignment is centered, meaning the text is centered across the cell." />
      <item value="* Set the row's height or set to ff (-1) for undefined/default-height. Set the height in &quot;twips&quot; or * 1/20th of a point. * * @param height rowheight or 0xff for undefined (use sheet default)" />
      <item value="verify" />
      <item value="Duplicate" />
      <item value="* Helps with configuring HandlerMappings path matching options such as trailing slash match, * suffix registration, path matcher and path helper. * Configured path matcher and path helper instances are shared for:" />
      <item value="launch" />
      <item value="lunch" />
      <item value="receive" />
      <item value="pickup" />
      <item value="examine" />
      <item value="review" />
      <item value="拒绝" />
      <item value="agree" />
      <item value="release" />
      <item value="chark" />
      <item value="授权" />
      <item value="Authentication" />
      <item value="Sibling of this node" />
      <item value="First child of this node" />
      <item value="Substring held at this node (could be a single character)" />
      <item value="Index into the word collection array." />
      <item value="* Example: consider the words &quot;have&quot;, &quot;hit&quot;, &quot;see&quot;, &quot;data&quot; stored in an * array in that order. Then, the substring &quot;ave&quot; in &quot;have&quot; will be indexed * by the triplet (0,1,3) [&quot;have&quot; is at position 0 in the array, 1 is the index * of character 'a' in &quot;have&quot; and 3 is the index of character 'e' in &quot;have&quot;]. * Similarly, substring &quot;ee&quot; in the word &quot;see&quot; will be indexed by the triplet * (2,1,2)." />
      <item value="* This class encapsulates the set of 3 indexes that point to a substring * stored in an array of strings. The array of strings is the collection of * words that are indexed by the trie. Each node of the trie will have an * instance of Indexes. * * Example: consider the words &quot;have&quot;, &quot;hit&quot;, &quot;see&quot;, &quot;data&quot; stored in an * array in that order. Then, the substring &quot;ave&quot; in &quot;have&quot; will be indexed * by the triplet (0,1,3) [&quot;have&quot; is at position 0 in the array, 1 is the index * of character 'a' in &quot;have&quot; and 3 is the index of character 'e' in &quot;have&quot;]. * Similarly, substring &quot;ee&quot; in the word &quot;see&quot; will be indexed by the triplet * (2,1,2)." />
      <item value="* Given a trie, returns the &quot;completion list&quot; for a prefix, i.e. all the leaf nodes in the * trie whose words start with this prefix. * For instance, if the trie had the words &quot;bear&quot;, &quot;bull&quot;, &quot;stock&quot;, and &quot;bell&quot;, * the completion list for prefix &quot;b&quot; would be the leaf nodes that hold &quot;bear&quot;, &quot;bull&quot;, and &quot;bell&quot;; * for prefix &quot;be&quot;, the completion would be the leaf nodes that hold &quot;bear&quot; and &quot;bell&quot;, * and for prefix &quot;bell&quot;, completion would be the leaf node that holds &quot;bell&quot;. * (The last example shows that an input prefix can be an entire word.) * The order of returned leaf nodes DOES NOT MATTER. So, for prefix &quot;be&quot;, * the returned list of leaf nodes can be either hold [bear,bell] or [bell,bear]." />
      <item value="MODIFY IT AS NEEDED FOR YOUR IMPLEMENTATION" />
      <item value="FOLLOWING LINE IS A PLACEHOLDER TO ENSURE COMPILATION" />
      <item value="* Builds a trie by inserting all words in the input array, one at a time, * in sequence FROM FIRST TO LAST. (The sequence is IMPORTANT!) * The words in the input array are all lower case." />
      <item value="A granted authority textual representation is required" />
      <item value="te" />
      <item value="DIAGNOSTIC" />
      <item value="命令" />
      <item value="小臂" />
      <item value="方法" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="43" />
        <entry key="ENGLISH" value="44" />
        <entry key="DUTCH" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>