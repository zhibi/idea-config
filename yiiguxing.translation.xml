<application>
  <component name="AppStorage">
    <histories>
      <item value="卖" />
      <item value="买" />
      <item value="DECEMBER" />
      <item value="合同" />
      <item value="Assignable" />
      <item value="sequence" />
      <item value="Allocate bits for UID according to delta seconds &amp; workerId &amp; sequence&lt;br&gt;" />
      <item value="Get next millisecond" />
      <item value="Allocate bits for UID" />
      <item value="Clock moved backwards, refuse to generate uid" />
      <item value="make sure allocated 64 bits" />
      <item value="The highest bit used for sign" />
      <item value="Constructor with timestampBits, workerIdBits, sequenceBits&lt;br&gt;" />
      <item value="Allocate 64 bits for the UID(long)&lt;br&gt; * sign (fixed 1bit) -&gt; deltaSecond -&gt; workerId -&gt; sequence(within the same second)" />
      <item value="Bits Allocator" />
      <item value="worker" />
      <item value="Stable fields after spring bean initializing" />
      <item value="Customer epoch" />
      <item value="epoch Str" />
      <item value="Customer epoch, unit as second. For example 2016-05-20" />
      <item value="Bits allocate" />
      <item value="time Bits" />
      <item value="The next 22 bits, represents the worker's id which assigns based on database, max id is about 420W" />
      <item value="he next 28 bits, represents delta seconds since a customer epoch(2016-05-20 00:00:00.000). * Supports about 8.7 years until to 2024-11-20 21:24:16" />
      <item value="/** * Represents an implementation of {@link UidGenerator} * * The unique id has 64bits (long), default allocated as blow:&lt;br&gt; * &lt;li&gt;sign: The highest bit is 0 * &lt;li&gt;delta seconds: The next 28 bits, represents delta seconds since a customer epoch(2016-05-20 00:00:00.000). * Supports about 8.7 years until to 2024-11-20 21:24:16 * &lt;li&gt;worker id: The next 22 bits, represents the worker's id which assigns based on database, max id is about 420W * &lt;li&gt;sequence: The next 13 bits, represents a sequence within the same second, max for 8192/s&lt;br&gt;&lt;br&gt; * * The {@link DefaultUidGenerator#parseUID(long)} is a tool method to parse the bits" />
      <item value="* Parse the UID into elements which are used to generate the UID. &lt;br&gt; * Such as timestamp &amp; workerId &amp; sequence..." />
      <item value="release" />
      <item value="/** * Variant of JSR-303's {@link javax.validation.Valid}, supporting the * specification of validation groups. Designed for convenient use with * Spring's JSR-303 support but not JSR-303 specific. * * &lt;p&gt;Can be used e.g. with Spring MVC handler methods arguments. * Supported through {@link org.springframework.validation.SmartValidator}'s * validation hint concept, with validation group classes acting as hint objects. * * &lt;p&gt;Can also be used with method level validation, indicating that a specific * class is supposed to be validated at the method level (acting as a pointcut * for the corresponding validation interceptor), but also optionally specifying * the validation groups for method-level validation in the annotated class. * Applying this annotation at the method level allows for overriding the * validation groups for a specific method but does not serve as a pointcut; * a class-level annotation is nevertheless necessary to trigger method validation * for a specific bean to begin with. Can also be used as a meta-annotation on a * custom stereotype annotation or a custom group-specific validated annotation." />
      <item value="Aggregate" />
      <item value="maximum number of integral digits accepted for this number" />
      <item value="The annotated element must be a number within accepted range" />
      <item value="maximum number of fractional digits accepted for this number" />
      <item value="Specifies whether the specified maximum is inclusive or exclusive. * By default, it is inclusive." />
      <item value="* Specifies whether the specified maximum is inclusive or exclusive. * By default, it is inclusive." />
      <item value="电源" />
      <item value="床" />
      <item value="volatile" />
      <item value="Compressor" />
      <item value="动物" />
      <item value="/** * Creates a {@link BloomFilter BloomFilter&lt;T&gt;} with the expected number of * insertions and expected false positive probability. * * &lt;p&gt;Note that overflowing a {@code BloomFilter} with significantly more elements * than specified, will result in its saturation, and a sharp deterioration of its * false positive probability. * * &lt;p&gt;The constructed {@code BloomFilter&lt;T&gt;} will be serializable if the provided * {@code Funnel&lt;T&gt;} is. * * &lt;p&gt;It is recommended that the funnel be implemented as a Java enum. This has the * benefit of ensuring proper serialization and deserialization, which is important * since {@link #equals} also relies on object identity of funnels. * * @param funnel the funnel of T's that the constructed {@code BloomFilter&lt;T&gt;} will use * @param expectedInsertions the number of expected insertions to the constructed * {@code BloomFilter&lt;T&gt;}; must be positive * @param fpp the desired false positive probability (must be positive and less than 1.0) * @return a {@code BloomFilter} */" />
      <item value="临时" />
      <item value="Anchor" />
      <item value="coordinate in EMU within the first cell." />
      <item value="the column (0 based) of the second cell." />
      <item value="the row (0 based) of the first cell." />
      <item value="the column (0 based) of the first cell." />
      <item value="Extended" />
      <item value="spec" />
      <item value="/** * Creates a picture. * @param anchor the client anchor describes how this picture is * attached to the sheet. * @param pictureIndex the index of the picture in the workbook collection * of pictures. * * @return the newly created picture." />
      <item value="wrapper" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="80" />
        <entry key="ENGLISH" value="80" />
        <entry key="DUTCH" value="1" />
        <entry key="SWEDISH" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="ignoreRegExp" value="" />
  </component>
</application>